; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Dashball"
#define MyAppVersion "2.2"
#define MyAppPublisher "Dualz IT"
#define MyAppURL "dashball.dualzit.nl"
#define MyAppExeName "dashball.exe"
#define MyAppAssocName "Dashball"
#define MyAppAssocExt ".exe"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
AppId={{5F2EDDAC-5FC6-48D9-A8C1-988A753B2019}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ArchitecturesInstallIn64BitMode=x64 
ChangesAssociations=yes
DisableProgramGroupPage=yes
LicenseFile=..\..\..\LICENSE
OutputBaseFilename=Dashball
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "dashball.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\Website\*"; DestDir: "{app}\Website"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\..\..\go.mod"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\..\go.sum"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\..\LICENSE"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\..\README.md"; DestDir: "{app}"; Flags: ignoreversion


[CustomMessages]
AutoStartWithWindows=Let Dashball start up automatically

[Tasks]
Name: "autostart"; Description: "{cm:AutoStartWithWindows}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""
Root: HKCU; Subkey: "Software\Microsoft\Windows\CurrentVersion\Run"; ValueType: string; ValueName: "{#MyAppName}"; ValueData: """{app}\{#MyAppExeName}"""; Flags: uninsdeletevalue; Tasks: autostart

[Icons]
Name: "{commonstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: autostart

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent runhidden

[Code]
var
  ConfigPage: TInputQueryWizardPage;

procedure InitializeWizard;
begin
  ConfigPage := CreateInputQueryPage(wpWelcome,
    'Dashball Configuration',
    'Set up web server settings',
    'Please enter the desired configuration values for Dashball:');

  ConfigPage.Add('Port (e.g. 8080):', False);
  ConfigPage.Add('Enable animations (true/false):', False);
  ConfigPage.Add('Update interval (seconds):', False);
  ConfigPage.Add('Default points to show:', False);
  

  // Default values
  ConfigPage.Values[0] := '8080';
  ConfigPage.Values[1] := 'true';
  ConfigPage.Values[2] := '1';
  ConfigPage.Values[3] := '10';
  
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  Port, Animations, Interval, DefaultPoints, MaxPoints: string;
  ConfigJSON: string;
begin
  if CurStep = ssPostInstall then
  begin
    Port := ConfigPage.Values[0];
    Animations := ConfigPage.Values[1];
    Interval := ConfigPage.Values[2];
    DefaultPoints := ConfigPage.Values[3];
   

    ConfigJSON :=
      '{' + #13#10 +
      '  "port": ' + Port + ',' + #13#10 +
      '  "animations": ' + LowerCase(Animations) + ',' + #13#10 +
      '  "update_interval_seconds": ' + Interval + ',' + #13#10 +
      '  "default_points_to_show": ' + DefaultPoints + ',' + #13#10 +
      '  "max_data_points": 10' + ',' + #13#10 +
      '  "save_history_seconds": 10' + #13#10 +
      '}';

    SaveStringToFile(ExpandConstant('{app}\website\config.json'), ConfigJSON, False);

    MsgBox('Installation completed successfully! Dashball will now run in the background and start up automatically.', mbInformation, MB_OK);
  end;
end;
