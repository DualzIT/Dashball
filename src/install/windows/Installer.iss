; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Dashball"
#define MyAppVersion "beta 0.2"
#define MyAppPublisher "Dualz IT"
#define MyAppURL "dualzit.nl"
#define MyAppExeName "dashball.exe"
#define MyAppAssocName "Dashball"
#define MyAppAssocExt ".exe"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{5F2EDDAC-5FC6-48D9-A8C1-988A753B2019}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
LicenseFile=D:\a\Dashball\Dashball\LICENSE
OutputBaseFilename=Dashball
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "D:\a\Dashball\Dashball\src\install\windows\dashball.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\a\Dashball\Dashball\Website\*"; DestDir: "{app}\Website"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\a\Dashball\Dashball\go.mod"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\a\Dashball\Dashball\go.sum"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\a\Dashball\Dashball\LICENSE"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\a\Dashball\Dashball\README.md"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\a\Dashball\Dashball\src\json\config.json"; DestDir: "{app}\json"; Flags: ignoreversion
Source: "D:\a\Dashball\Dashball\src\json\historical_data.json"; DestDir: "{app}\json"; Flags: ignoreversion

[CustomMessages]
AutoStartWithWindows=Let Dashball start up automatically

[Tasks]
Name: "autostart"; Description: "{cm:AutoStartWithWindows}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""
Root: HKCU; Subkey: "Software\Microsoft\Windows\CurrentVersion\Run"; ValueType: string; ValueName: "{#MyAppName}"; ValueData: """{app}\{#MyAppExeName}"""; Flags: uninsdeletevalue; Tasks: autostart

[Icons]
Name: "{commonstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: autostart

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent runhidden

[Code]
var
  PortInputPage: TInputQueryWizardPage;

procedure InitializeWizard;
begin
  PortInputPage := CreateInputQueryPage(wpWelcome,
    'Port Configuration', 'Which port needs the website to be?',
    'Choose a port for the website and click on next.');
  PortInputPage.Add('Port:', False);
  PortInputPage.Values[0] := '80';
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    SaveStringToFile(ExpandConstant('{app}\config.json'), Format('{ "port": %s, "update_interval_seconds": 1 }', [PortInputPage.Values[0]]), False);
     MsgBox('Installation completed successfully! Dashball will now run in the background and start up automatically.', mbInformation, MB_OK);
  end;
end;
