name: Build and Package

on:
  release:
    types: [created]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.18'

    - name: Verify Go version
      run: go version

    - name: Build for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -o src/install/linux/dashball ./src

    - name: Archive the build output
      run: |
        tar -czvf dashball-linux.tar.gz -C src/install/linux dashball -C ../../../ json/config.json Website/ go.mod go.sum LICENSE README.md

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-output-linux
        path: dashball-linux.tar.gz

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.18'

    - name: Verify Go version
      run: go version
      shell: pwsh

    - name: Build for Windows
      run: |
        $env:GOOS = "windows"
        $env:GOARCH = "amd64"
        go build -o src\install\windows\dashball.exe ./src
      shell: pwsh

    - name: Install Inno Setup
      run: choco install innosetup
      shell: pwsh

    - name: List directory contents
      run: dir src\install\windows
      shell: cmd

    - name: Create Windows installer
      run: iscc src\install\windows\Installer.iss
      shell: cmd

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-output-windows
        path: |
          src/install/windows/dashball.exe
          src/install/windows/Output/*.exe
